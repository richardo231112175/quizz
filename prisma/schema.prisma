// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    output   = "../generated"
}

datasource db {
    provider  = "postgresql"
    url       = env("SUPABASE_DATABASE_URL")
    directUrl = env("SUPABASE_DIRECT_URL")
}

enum QuestionType {
    SINGLE_CHOICE   @map("single_choice")
    MULTIPLE_CHOICE @map("multiple_choice")
    OPEN_ENDED      @map("open_ended")
}

enum QuizSessionDifficulty {
    EASY   @map("Easy")
    MEDIUM @map("Medium")
    HARD   @map("Hard")
}

enum QuizSessionCategory {
    SCIENCE    @map("science")
    HISTORY    @map("history")
    GEOGRAPHY  @map("geography")
    TECHNOLOGY @map("technology")
    ARTS       @map("arts")
    SPORTS     @map("sports")
    MUSIC      @map("music")
    HEALTH     @map("health")
}

enum QuizSessionVisibility {
    PUBLIC  @map("public")
    PRIVATE @map("private")
}

model Quiz {
    id          Int           @id @default(autoincrement())
    clerk_id    String
    title       String        @db.VarChar(100)
    description String?       @db.Text
    created_at  DateTime      @default(now())

    sessions    QuizSession[]
    questions   Question[]

    @@index([clerk_id])
}

model Question {
    id                      Int          @id @default(autoincrement())
    quiz_id                 Int
    question                String       @db.Text
    image_url               String?      @db.Text
    type                    QuestionType
    time_limit              Int
    max_score               Int
    single_choice_options   String?      @db.Text
    single_choice_correct   String?      @db.Text
    multiple_choice_options String?      @db.Text
    multiple_choice_correct String?      @db.Text
    open_ended_answer_key   String?      @db.Text

    quiz                    Quiz         @relation(fields: [quiz_id], references: [id], onDelete: Cascade)
    play_details            PlayDetail[]

    @@index([quiz_id])
    @@index([type])
}

model QuizSession {
    id              Int                   @id @default(autoincrement())
    clerk_id        String
    quiz_id         Int
    title           String                @db.VarChar(100)
    description     String?               @db.Text
    image_url       String?               @db.Text
    difficulty      QuizSessionDifficulty
    category        QuizSessionCategory
    time_limit      Int
    visibility      QuizSessionVisibility @default(PUBLIC)
    password        String?               @db.VarChar(100)
    single_choice   Int
    multiple_choice Int
    open_ended      Int
    open_time       DateTime
    close_time      DateTime
    created_at      DateTime              @default(now())

    quiz            Quiz                  @relation(fields: [quiz_id], references: [id], onDelete: Cascade)
    plays           Play[]
    ratings         Rating[]

    @@index([quiz_id])
    @@index([difficulty])
    @@index([category])
    @@index([visibility])
}

model Play {
    id              Int          @id @default(autoincrement())
    clerk_id        String
    quiz_session_id Int
    final_score     Int          @default(0)
    max_score       Int
    finish_time     DateTime?
    start_time      DateTime     @default(now())
    end_time        DateTime

    quiz_session    QuizSession  @relation(fields: [quiz_session_id], references: [id], onDelete: Cascade)
    play_details    PlayDetail[]
}

model PlayDetail {
    id          Int       @id @default(autoincrement())
    clerk_id    String
    play_id     Int
    question_id Int
    answer      String?   @db.Text
    score       Int       @default(0)
    time_taken  Int       @default(0)
    start_time  DateTime?
    end_time    DateTime?

    play        Play      @relation(fields: [play_id], references: [id], onDelete: Cascade)
    question    Question  @relation(fields: [question_id], references: [id], onDelete: Cascade)

    @@index([play_id])
    @@index([question_id])
}

model Rating {
    id              Int         @id @default(autoincrement())
    clerk_id        String
    quiz_session_id Int
    rating          Int

    quiz_session    QuizSession @relation(fields: [quiz_session_id], references: [id], onDelete: Cascade)
}
